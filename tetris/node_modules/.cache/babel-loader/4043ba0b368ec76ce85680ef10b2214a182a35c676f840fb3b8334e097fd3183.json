{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport const useCountDown = isStart => {\n  _s();\n  const [countDown, setCountDown] = useState(3);\n  useEffect(() => {\n    if (isStart) {\n      const interval = setInterval(() => {\n        if (countDown < 0) {\n          clearInterval(interval);\n        }\n        setCountDown(prev => prev - 1);\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isStart]);\n  return countDown;\n};\n_s(useCountDown, \"Cozrx90AOcgSv7CQWU9yzBAlIBA=\");","map":{"version":3,"names":["useState","useEffect","useCountDown","isStart","_s","countDown","setCountDown","interval","setInterval","clearInterval","prev"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/useCountDown.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useCountDown = (isStart) => {\n    const [countDown, setCountDown] = useState(3);\n\n    useEffect( () => {\n        if(isStart) {\n            const interval = setInterval( () => {\n                if(countDown < 0) { clearInterval(interval) }\n                setCountDown((prev) => prev -1);\n            }, 1000); \n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isStart])\n\n    return countDown;\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAE,MAAM;IACb,IAAGE,OAAO,EAAE;MACR,MAAMI,QAAQ,GAAGC,WAAW,CAAE,MAAM;QAChC,IAAGH,SAAS,GAAG,CAAC,EAAE;UAAEI,aAAa,CAACF,QAAQ,CAAC;QAAC;QAC5CD,YAAY,CAAEI,IAAI,IAAKA,IAAI,GAAE,CAAC,CAAC;MACnC,CAAC,EAAE,IAAI,CAAC;IACZ;IACJ;EACA,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,OAAOE,SAAS;AACpB,CAAC;AAAAD,EAAA,CAdYF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}