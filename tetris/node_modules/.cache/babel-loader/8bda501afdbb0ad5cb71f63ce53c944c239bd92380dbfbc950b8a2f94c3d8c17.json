{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from 'react';\nimport { TETROMINOS, randomTetromino } from '../../constants';\nimport { STAGE_WIDTH, checkCollision } from '../../gameHelpers';\nexport const usePlayer = stage => {\n  _s();\n  const [player, setPlayer] = useState({\n    pos: {\n      x: 0,\n      y: 0\n    },\n    tetromino: TETROMINOS[0].shape,\n    collide: false,\n    ghost: []\n  });\n  const rotate = (matrix, dir) => {\n    const rotateTetromino = matrix.map((_, index) => matrix.map(col => col[index]));\n    if (dir > 0) return rotateTetromino.map(row => row.reverse());\n    return rotateTetromino.reverse();\n  };\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, {\n      x: 0,\n      y: 0\n    })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n  const updatePlayerPos = _ref => {\n    let {\n      x,\n      y,\n      collide\n    } = _ref;\n    setPlayer(prev => ({\n      ...prev,\n      pos: {\n        x: prev.pos.x += x,\n        y: prev.pos.y += y\n      },\n      collide\n    }));\n  };\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: {\n        x: STAGE_WIDTH / 2 - 2,\n        y: 0\n      },\n      tetromino: randomTetromino().shape,\n      collide: false,\n      ghost: []\n    });\n  }, []);\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n_s(usePlayer, \"dHeRHvAYJRSLxS8Tgw6/34X6Drk=\");","map":{"version":3,"names":["useCallback","useState","TETROMINOS","randomTetromino","STAGE_WIDTH","checkCollision","usePlayer","stage","_s","player","setPlayer","pos","x","y","tetromino","shape","collide","ghost","rotate","matrix","dir","rotateTetromino","map","_","index","col","row","reverse","playerRotate","clonedPlayer","JSON","parse","stringify","offset","length","updatePlayerPos","_ref","prev","resetPlayer"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/tetris/usePlayer.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../../constants';\nimport { STAGE_WIDTH, checkCollision } from '../../gameHelpers';\n\nexport const usePlayer = (stage) => {\n    const [player, setPlayer] = useState({\n        pos:  {x: 0, y: 0 },\n        tetromino: TETROMINOS[0].shape,\n        collide: false,\n        ghost: []\n    });\n    \n    const rotate = (matrix, dir) => {\n        const rotateTetromino = matrix.map((_, index) => matrix.map (col => col[index]));\n\n        if(dir > 0) return rotateTetromino.map(row => row.reverse());\n        return rotateTetromino.reverse();\n    }\n    \n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0})) {\n            clonedPlayer.pos.x += offset;\n            offset =- (offset + (offset > 0 ? 1 : -1));\n            if(offset > clonedPlayer.tetromino[0].length) {\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n    }\n\n    const updatePlayerPos = ({ x, y, collide }) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collide\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collide: false,\n            ghost: []\n        })\n    }, [])    \n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}