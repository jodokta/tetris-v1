{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Preview.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import Cell from \"./Cell\";\n// import { selectColor } from \"../utill.js/selectColor\";\n\n// const Preview = ({shape}) => {\n//     const initGrid = Array.from({ length: 4 }, () => new Array(4).fill(0));\n//     const [grid, setGrid] = useState(initGrid);\n//     const color = selectColor(shape);\n\n//     useEffect(() => {\n//         const temp = [...grid];\n//         for (let i = 0; i < shape.length; i++) {\n//           for (let j = 0; j < shape[i].length; j++) {\n//             if (shape[i][j] === 1) {\n//               temp[i][j] = 1;\n//             }\n//           }\n//         }\n//         setGrid(temp);\n//     }, [setGrid, shape]);\n\n//     return(\n//         <div className=\"preview\">\n//             {grid.map((row, rowIndex) => row.map((col, colIndex) => {\n//                 return <Cell \n//                     key={`${rowIndex}, ${colIndex}`}\n//                     color={grid[rowIndex][colIndex] === 1 ? color : 'black'}\n//                 />\n//             }))}\n//         </div>\n//     );\n// }\n// export default Preview;\n\nimport { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { selectColor } from \"../utill.js/selectColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = _ref => {\n  _s();\n  let {\n    shape\n  } = _ref;\n  const initGrid = Array.from({\n    length: 4\n  }, () => new Array(4).fill(0));\n  const [grid, setGrid] = useState(initGrid);\n  const color = selectColor(shape);\n  useEffect(() => {\n    const temp = [...grid];\n    for (let i = 0; i < shape.length; i++) {\n      for (let j = 0; j < shape[i].length; j++) {\n        if (shape[i][j] === 1) {\n          temp[i][j] = 1;\n        }\n      }\n    }\n    setGrid(temp);\n  }, [setGrid, shape]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview\",\n    children: grid.map((row, rowIndex) => row.map((col, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n      color: grid[rowIndex][colIndex] === 1 ? color : 'black'\n    }, `${rowIndex}, ${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Preview, \"/Ey8qWfxNj7Z00trVQ0bpAZn0cI=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["useEffect","useState","Cell","selectColor","jsxDEV","_jsxDEV","Preview","_ref","_s","shape","initGrid","Array","from","length","fill","grid","setGrid","color","temp","i","j","className","children","map","row","rowIndex","col","colIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Preview.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import Cell from \"./Cell\";\n// import { selectColor } from \"../utill.js/selectColor\";\n\n// const Preview = ({shape}) => {\n//     const initGrid = Array.from({ length: 4 }, () => new Array(4).fill(0));\n//     const [grid, setGrid] = useState(initGrid);\n//     const color = selectColor(shape);\n    \n//     useEffect(() => {\n//         const temp = [...grid];\n//         for (let i = 0; i < shape.length; i++) {\n//           for (let j = 0; j < shape[i].length; j++) {\n//             if (shape[i][j] === 1) {\n//               temp[i][j] = 1;\n//             }\n//           }\n//         }\n//         setGrid(temp);\n//     }, [setGrid, shape]);\n\n//     return(\n//         <div className=\"preview\">\n//             {grid.map((row, rowIndex) => row.map((col, colIndex) => {\n//                 return <Cell \n//                     key={`${rowIndex}, ${colIndex}`}\n//                     color={grid[rowIndex][colIndex] === 1 ? color : 'black'}\n//                 />\n//             }))}\n//         </div>\n//     );\n// }\n// export default Preview;\n\nimport { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport { selectColor } from \"../utill.js/selectColor\";\n\nconst Preview = ({ shape }) => {\n  const initGrid = Array.from({ length: 4 }, () => new Array(4).fill(0));\n  const [grid, setGrid] = useState(initGrid);\n  const color = selectColor(shape);\n\n  useEffect(() => {\n    const temp = [...grid];\n    for (let i = 0; i < shape.length; i++) {\n      for (let j = 0; j < shape[i].length; j++) {\n        if (shape[i][j] === 1) {\n          temp[i][j] = 1;\n        }\n      }\n    }\n    setGrid(temp);\n  }, [setGrid, shape]);\n\n  return (\n    <div className=\"preview\">\n      {grid.map((row, rowIndex) =>\n        row.map((col, colIndex) => (\n          <Cell\n            key={`${rowIndex}, ${colIndex}`}\n            color={grid[rowIndex][colIndex] === 1 ? color : 'black'}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Preview;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,OAAO,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACxB,MAAMG,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,MAAM,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACS,QAAQ,CAAC;EAC1C,MAAMO,KAAK,GAAGd,WAAW,CAACM,KAAK,CAAC;EAEhCT,SAAS,CAAC,MAAM;IACd,MAAMkB,IAAI,GAAG,CAAC,GAAGH,IAAI,CAAC;IACtB,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACI,MAAM,EAAEM,CAAC,EAAE,EAAE;MACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,KAAK,CAACU,CAAC,CAAC,CAACN,MAAM,EAAEO,CAAC,EAAE,EAAE;QACxC,IAAIX,KAAK,CAACU,CAAC,CAAC,CAACC,CAAC,CAAC,KAAK,CAAC,EAAE;UACrBF,IAAI,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,CAAC;QAChB;MACF;IACF;IACAJ,OAAO,CAACE,IAAI,CAAC;EACf,CAAC,EAAE,CAACF,OAAO,EAAEP,KAAK,CAAC,CAAC;EAEpB,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,EACrBP,IAAI,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KACtBD,GAAG,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,kBACpBtB,OAAA,CAACH,IAAI;MAEHe,KAAK,EAAEF,IAAI,CAACU,QAAQ,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC,GAAGV,KAAK,GAAG;IAAQ,GADlD,GAAEQ,QAAS,KAAIE,QAAS,EAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CACF,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7BIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}