{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris_pro/tetris/src/components/Tetris/GameOver.js\",\n  _s = $RefreshSig$();\nimport \"../../css/GameOver.css\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function submitScore(player_name, score) {\n  const response = await fetch('/save-score', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      player_name,\n      score\n    })\n  });\n  if (response.ok) {\n    alert('Score successfully saved');\n  } else {\n    console.error('Error saving score:', response);\n  }\n}\nconst GameOver = _ref => {\n  _s();\n  let {\n    score,\n    restart,\n    setIsStart\n  } = _ref;\n  const inputRef = useRef(null);\n  const [inputValue, setInputValue] = useState('');\n  const handleSubmit = async () => {\n    await submitScore(inputValue, score);\n  };\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameover-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      onChange: handleInputChange,\n      value: inputValue,\n      maxLength: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"score : \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameover-modal-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restart,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setIsStart,\n        children: \"Main Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Quit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n_s(GameOver, \"x+PziO73fQvQtVQXUuJV34pA6Ww=\");\n_c = GameOver;\nexport default GameOver;\nvar _c;\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","submitScore","player_name","score","response","fetch","method","headers","body","JSON","stringify","ok","alert","console","error","GameOver","_ref","_s","restart","setIsStart","inputRef","inputValue","setInputValue","handleSubmit","current","focus","handleInputChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","maxLength","onClick","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris_pro/tetris/src/components/Tetris/GameOver.js"],"sourcesContent":["import \"../../css/GameOver.css\"\nimport {useEffect, useRef, useState} from \"react\"\n\nasync function submitScore(player_name, score) {\n    const response = await fetch('/save-score', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ player_name, score }),\n    });\n  \n    if (response.ok) {\n      alert('Score successfully saved');\n    } else {\n      console.error('Error saving score:', response);\n    }\n  }\n\nconst GameOver = ({ score, restart, setIsStart }) => {\n    const inputRef = useRef(null);\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleSubmit = async () => {\n        await submitScore(inputValue, score);\n      };\n    \n    useEffect(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, []);\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    return (\n      <div className=\"gameover-modal\">\n        <h1>Game Over</h1>\n        <input ref={inputRef} onChange={handleInputChange} value={inputValue} maxLength=\"9\"/>\n        <span>\n          score : <span>{score}</span>\n        </span>\n        <div className=\"gameover-modal-buttons\">\n          <button onClick={restart}>Play Again</button>\n          <button onClick={setIsStart}>Main Menu</button>\n          <button onClick={handleSubmit}>Submit</button>\n          <button>Quit</button>\n        </div>\n      </div>\n    );\n  };\n\nexport default GameOver\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}