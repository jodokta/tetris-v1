{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Tetris/Cell.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { TETROMINOS } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = _ref => {\n  let {\n    type,\n    isGhost\n  } = _ref;\n  return isGhost ? /*#__PURE__*/_jsxDEV(StyledCell, {\n    ghost: isGhost ? 'true' : 'false',\n    type: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(StyledCell, {\n    type: type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 86\n  }, this);\n};\n\n// export default Cell;\n_c = Cell;\nexport default _c2 = /*#__PURE__*/React.memo(Cell);\nconst StyledCell = styled.div`\n    display: inline;\n    width: auto;\n\n  /* 일반 셀 스타일 */\n  border: ${props => props.type === 0 ? '0px solid' : '2px solid'};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n  border-radius: 4px;\n  \n  /* 고스트 셀 스타일 */\n  ${props => props.ghost && css`\n      background-color: white;\n      border: ${props => props.type === 0 ? '0px solid' : '2px solid'};\n      border-bottom-color: rgba(${props => props.color}, 0.1);\n      border-right-color: rgba(${props => props.color}, 1);\n      border-top-color: rgba(${props => props.color}, 1);\n      border-left-color: rgba(${props => props.color}, 0.3);\n      border-radius: 4px;\n    `}\n`;\n\n// border: ${props => (props.type === 0 ? '0px solid' : '2px solid')};\n//     border-bottom-color: rgba(${props => props.color}, 0.1);\n//     border-right-color: rgba(${props => props.color}, 1);\n//     border-top-color: rgba(${props => props.color}, 1);\n//     border-left-color: rgba(${props => props.color}, 0.3);\n\n//     /* border: rgba(${props => props.ghost ? '2px solid white' : 'none'}); */\n//     border-radius: 4px;\n_c3 = StyledCell;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"StyledCell\");","map":{"version":3,"names":["React","styled","css","TETROMINOS","jsxDEV","_jsxDEV","Cell","_ref","type","isGhost","StyledCell","ghost","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","div","props","color","_c3","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Tetris/Cell.js"],"sourcesContent":["import React from 'react';\n\nimport styled, { css } from 'styled-components';\nimport { TETROMINOS } from '../../constants';\n\n\nconst Cell = ({ type, isGhost }) => {\n    return isGhost ? <StyledCell ghost={isGhost ? 'true' : 'false'} type={type} /> : <StyledCell type={type} />;\n}\n\n// export default Cell;\nexport default React.memo(Cell);\n\nconst StyledCell = styled.div`\n    display: inline;\n    width: auto;\n\n  /* 일반 셀 스타일 */\n  border: ${props => (props.type === 0 ? '0px solid' : '2px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n  border-radius: 4px;\n  \n  /* 고스트 셀 스타일 */\n  ${props =>\n    props.ghost &&\n    css`\n      background-color: white;\n      border: ${props => (props.type === 0 ? '0px solid' : '2px solid')};\n      border-bottom-color: rgba(${props => props.color}, 0.1);\n      border-right-color: rgba(${props => props.color}, 1);\n      border-top-color: rgba(${props => props.color}, 1);\n      border-left-color: rgba(${props => props.color}, 0.3);\n      border-radius: 4px;\n    `}\n`\n\n// border: ${props => (props.type === 0 ? '0px solid' : '2px solid')};\n//     border-bottom-color: rgba(${props => props.color}, 0.1);\n//     border-right-color: rgba(${props => props.color}, 1);\n//     border-top-color: rgba(${props => props.color}, 1);\n//     border-left-color: rgba(${props => props.color}, 0.3);\n\n//     /* border: rgba(${props => props.ghost ? '2px solid white' : 'none'}); */\n//     border-radius: 4px;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,IAAI,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3B,OAAOE,OAAO,gBAAGJ,OAAA,CAACK,UAAU;IAACC,KAAK,EAAEF,OAAO,GAAG,MAAM,GAAG,OAAQ;IAACD,IAAI,EAAEA;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGV,OAAA,CAACK,UAAU;IAACF,IAAI,EAAEA;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/G,CAAC;;AAED;AAAAC,EAAA,GAJMV,IAAI;AAKV,eAAAW,GAAA,gBAAejB,KAAK,CAACkB,IAAI,CAACZ,IAAI,CAAC;AAE/B,MAAMI,UAAU,GAAGT,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA;AACA;AACA,YAAYC,KAAK,IAAKA,KAAK,CAACZ,IAAI,KAAK,CAAC,GAAG,WAAW,GAAG,WAAa;AACpE,8BAA8BY,KAAK,IAAIA,KAAK,CAACC,KAAM;AACnD,6BAA6BD,KAAK,IAAIA,KAAK,CAACC,KAAM;AAClD,2BAA2BD,KAAK,IAAIA,KAAK,CAACC,KAAM;AAChD,4BAA4BD,KAAK,IAAIA,KAAK,CAACC,KAAM;AACjD;AACA;AACA;AACA,IAAID,KAAK,IACLA,KAAK,CAACT,KAAK,IACXT,GAAI;AACR;AACA,gBAAgBkB,KAAK,IAAKA,KAAK,CAACZ,IAAI,KAAK,CAAC,GAAG,WAAW,GAAG,WAAa;AACxE,kCAAkCY,KAAK,IAAIA,KAAK,CAACC,KAAM;AACvD,iCAAiCD,KAAK,IAAIA,KAAK,CAACC,KAAM;AACtD,+BAA+BD,KAAK,IAAIA,KAAK,CAACC,KAAM;AACpD,gCAAgCD,KAAK,IAAIA,KAAK,CAACC,KAAM;AACrD;AACA,KAAM;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAAC,GAAA,GAjCMZ,UAAU;AAAA,IAAAM,EAAA,EAAAC,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}