{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport const useCountDown = isClick => {\n  _s();\n  const [count, setCount] = useState(3);\n  useEffect(() => {\n    let timer;\n    if (isClick && count > 0) {\n      timer = setInterval(() => {\n        setCount(prevCount => prevCount - 1);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [isClick, count]);\n  return count;\n};\n_s(useCountDown, \"fHZVwKSV2YZUsM9wF40EDGdFDQ8=\");","map":{"version":3,"names":["useState","useEffect","useCountDown","isClick","_s","count","setCount","timer","setInterval","prevCount","clearInterval"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/useCountDown.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useCountDown = (isClick) => {\n    const [count, setCount] = useState(3);\n    useEffect( () => {\n        let timer;\n        if (isClick && count > 0) {\n            timer = setInterval(() => {\n            setCount((prevCount) => prevCount - 1);\n            }, 1000);\n        }\n        return () => {\n            clearInterval(timer);\n        };\n    }, [isClick, count]);\n  \n    return count;\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,YAAY,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrCC,SAAS,CAAE,MAAM;IACb,IAAIM,KAAK;IACT,IAAIJ,OAAO,IAAIE,KAAK,GAAG,CAAC,EAAE;MACtBE,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC1BF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,IAAI,CAAC;IACZ;IACA,OAAO,MAAM;MACTC,aAAa,CAACH,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,CAACJ,OAAO,EAAEE,KAAK,CAAC,CAAC;EAEpB,OAAOA,KAAK;AAChB,CAAC;AAACD,EAAA,CAfWF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}