{"ast":null,"code":"// useSelectionBox.js\nimport { useEffect, useState } from 'react';\nconst useSelectionBox = () => {\n  // const [mouseDown, setMouseDown] = useState(false);\n  // const [selection, setSelection] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\n\n  // const handleMouseDown = (e) => {\n  //   setMouseDown(true);\n  //   setSelection({ ...selection, x1: e.clientX, y1: e.clientY });\n\n  // };\n\n  // const handleMouseUp = () => {\n  //   setMouseDown(false);\n  //   setSelection({ x1: 0, y1: 0, x2: 0, y2: 0 });\n  // };\n\n  // const handleMouseMove = (e) => {\n  //   if (!mouseDown) return;\n  //   setSelection({ ...selection, x2: e.clientX, y2: e.clientY });\n  // };\n\n  // const selectionStyle = {\n  //   position: 'fixed',\n  //   left: Math.min(selection.x1, selection.x2),\n  //   top: Math.min(selection.y1, selection.y2),\n  //   width: Math.abs(selection.x1 - selection.x2),\n  //   height: Math.abs(selection.y1 - selection.y2),\n  //   border: '1px solid blue',\n  //   backgroundColor: 'rgba(0, 0, 255, 0.2)',\n  //   pointerEvents: 'none',\n  //   overflow: 'visible'\n\n  // };\n\n  // return {\n  //   selectionStyle,\n  //   mouseDown,\n  //   handleMouseDown,\n  //   handleMouseUp,\n  //   handleMouseMove,\n  // };\n};\nexport default useSelectionBox;","map":{"version":3,"names":["useEffect","useState","useSelectionBox"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/useSelectionBox.js"],"sourcesContent":["// useSelectionBox.js\nimport { useEffect, useState } from 'react';\n\nconst useSelectionBox = () => {\n  // const [mouseDown, setMouseDown] = useState(false);\n  // const [selection, setSelection] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\n\n  // const handleMouseDown = (e) => {\n  //   setMouseDown(true);\n  //   setSelection({ ...selection, x1: e.clientX, y1: e.clientY });\n\n  // };\n\n  // const handleMouseUp = () => {\n  //   setMouseDown(false);\n  //   setSelection({ x1: 0, y1: 0, x2: 0, y2: 0 });\n  // };\n\n  // const handleMouseMove = (e) => {\n  //   if (!mouseDown) return;\n  //   setSelection({ ...selection, x2: e.clientX, y2: e.clientY });\n  // };\n\n  // const selectionStyle = {\n  //   position: 'fixed',\n  //   left: Math.min(selection.x1, selection.x2),\n  //   top: Math.min(selection.y1, selection.y2),\n  //   width: Math.abs(selection.x1 - selection.x2),\n  //   height: Math.abs(selection.y1 - selection.y2),\n  //   border: '1px solid blue',\n  //   backgroundColor: 'rgba(0, 0, 255, 0.2)',\n  //   pointerEvents: 'none',\n  //   overflow: 'visible'\n\n  // };\n\n  // return {\n  //   selectionStyle,\n  //   mouseDown,\n  //   handleMouseDown,\n  //   handleMouseUp,\n  //   handleMouseMove,\n  // };\n};\n\nexport default useSelectionBox;\n"],"mappings":"AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAED,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}