{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Tetris/Tetris.js\",\n  _s = $RefreshSig$();\nimport { StyledTetrisWrapper, StyledTetris } from \"../../css/StyledTetris\";\nimport { useState } from \"react\";\n\n// Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport GameOver from \"./GameOver\";\n\n// Custom Hooks\nimport { usePlayer } from \"../../hooks/tetris/usePlayer\";\nimport { useStage } from \"../../hooks/tetris/useStage\";\nimport { useInterval } from \"../../hooks/tetris/useInterval\";\nimport { useStats } from \"../../hooks/tetris/useStats\";\nimport { checkCollision, createStage } from \"../../gameHelpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tetris = _ref => {\n  _s();\n  let {\n    setIsStart\n  } = _ref;\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlyerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setlevel] = useStats(rowsCleared);\n  const movePlayer = dir => {\n    // check x-1, x+1\n    if (!checkCollision(player, stage, {\n      x: dir,\n      y: 0\n    })) {\n      updatePlyerPos({\n        x: dir,\n        y: 0\n      });\n    }\n  };\n  const startGame = e => {\n    const target = document.getElementById('TetrisWrpper');\n    e.target.blur();\n    target.focus();\n    // Reset all\n    setDropTime(1000);\n    setStage(createStage());\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setlevel(1);\n  };\n  const drop = () => {\n    //레벨 증가\n    if (rows > (level + 1) * 10) {\n      setlevel(prev => prev + 1);\n\n      // 속도 증가\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, {\n      x: 0,\n      y: 1\n    })) {\n      //다음 y좌표가 이동이 가능하면 블럭 한칸 내림\n      updatePlyerPos({\n        x: 0,\n        y: 1,\n        collide: false\n      });\n    } else {\n      //Game Over\n      //다음 y좌표 이동 불가 + 현재 죄표가 1보다 작다면? Game Over\n      if (player.pos.y < 1) {\n        console.log('Game Over!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlyerPos({\n        x: 0,\n        y: 0,\n        collide: true\n      });\n    }\n  };\n  const keyUp = _ref2 => {\n    let {\n      keyCode\n    } = _ref2;\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000);\n      }\n    }\n  };\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n  const hardDrop = () => {\n    // setDropTime(null);\n  };\n  const move = _ref3 => {\n    let {\n      keyCode\n    } = _ref3;\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      } else if (keyCode === 32) {\n        console.log('dard drop()');\n        hardDrop();\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    id: \"TetrisWrpper\",\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    onKeyUp: keyUp,\n    children: gameOver ? /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      restart: startGame,\n      setIsStart: setIsStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Stage, {\n        stage: stage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: `Score : ${score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Lines : ${rows}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: `Level : ${level}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          callback: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Tetris, \"6IbH3aShb8fN5ayWfkqu+yH2GAQ=\", false, function () {\n  return [usePlayer, useStage, useStats, useInterval];\n});\n_c = Tetris;\nexport default Tetris;\nvar _c;\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"names":["StyledTetrisWrapper","StyledTetris","useState","Stage","Display","StartButton","GameOver","usePlayer","useStage","useInterval","useStats","checkCollision","createStage","jsxDEV","_jsxDEV","Tetris","_ref","_s","setIsStart","dropTime","setDropTime","gameOver","setGameOver","player","updatePlyerPos","resetPlayer","playerRotate","stage","setStage","rowsCleared","score","setScore","rows","setRows","level","setlevel","movePlayer","dir","x","y","startGame","e","target","document","getElementById","blur","focus","drop","prev","collide","pos","console","log","keyUp","_ref2","keyCode","dropPlayer","hardDrop","move","_ref3","id","role","tabIndex","onKeyDown","onKeyUp","children","restart","fileName","_jsxFileName","lineNumber","columnNumber","text","callback","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Tetris/Tetris.js"],"sourcesContent":["import { StyledTetrisWrapper, StyledTetris } from \"../../css/StyledTetris\";\n\nimport { useState } from \"react\";\n\n// Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport GameOver from \"./GameOver\";\n\n// Custom Hooks\nimport { usePlayer } from \"../../hooks/tetris/usePlayer\";\nimport { useStage } from \"../../hooks/tetris/useStage\";\nimport { useInterval } from \"../../hooks/tetris/useInterval\";\nimport { useStats } from \"../../hooks/tetris/useStats\";\n\nimport { checkCollision, createStage } from \"../../gameHelpers\";\n\nconst Tetris = ({setIsStart}) => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlyerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setlevel] = useStats(rowsCleared);\n\n    const movePlayer = dir => {\n        // check x-1, x+1\n        if(!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlyerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = (e) => {\n        const target = document.getElementById('TetrisWrpper');\n        e.target.blur();\n        target.focus();\n        // Reset all\n        setDropTime(1000);\n        setStage(createStage());\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setlevel(1);\n    }\n    \n    const drop = () => {\n        //레벨 증가\n        if(rows > (level + 1) * 10) {\n            setlevel(prev => prev + 1);\n\n            // 속도 증가\n            setDropTime(1000 / (level + 1) + 200);\n        }\n\n        if(!checkCollision(player, stage, { x: 0, y: 1})) {\n            //다음 y좌표가 이동이 가능하면 블럭 한칸 내림\n            updatePlyerPos({ x: 0, y: 1, collide: false })\n        } else { \n            //Game Over\n            //다음 y좌표 이동 불가 + 현재 죄표가 1보다 작다면? Game Over\n            if(player.pos.y < 1) {\n                console.log('Game Over!!!');\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlyerPos({x: 0, y: 0, collide: true});\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if(!gameOver) {\n            if(keyCode === 40) {\n                setDropTime(1000);\n            }\n        }\n    }\n    \n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n    }\n    const hardDrop = () => {\n        // setDropTime(null);\n        \n    }\n\n    const move = ({ keyCode }) => {\n        if(!gameOver) {\n            if(keyCode === 37) {\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if (keyCode === 38) {\n                playerRotate(stage, 1);                \n            } else if (keyCode === 32) {\n                console.log('dard drop()')\n                hardDrop();\n            } else if (keyCode === 40) {\n                dropPlayer();\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return(\n        <StyledTetrisWrapper id=\"TetrisWrpper\" role='button' tabIndex='0' onKeyDown={e => move(e)} onKeyUp={keyUp}>\n            {gameOver ? (<GameOver score={score} restart = {startGame} setIsStart = {setIsStart}/>) : (\n            <StyledTetris>\n                <Stage stage={ stage } />\n                <aside>\n                    <div>\n                        <Display text={`Score : ${score}`} />\n                        <Display text={`Lines : ${rows}`} />\n                        <Display text={`Level : ${level}`} />\n                    </div>\n                    <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n            )}\n        </StyledTetrisWrapper>\n    );\n}\n\nexport default Tetris;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}