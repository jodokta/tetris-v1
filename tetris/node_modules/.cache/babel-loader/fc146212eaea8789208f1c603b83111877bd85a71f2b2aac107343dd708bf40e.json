{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\nimport Preview from \"./Preview\";\nimport GameStats from \"./GameStats\";\nimport { useCountDown } from \"../hooks/useCountDown\";\nimport { useSelector } from \"react-redux\";\nimport { useShapeAndColor } from \"../hooks/useShapeAndColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const isStart = useSelector(store => store.isStart.value);\n  const [isClick, setIsClick] = useState(false);\n  const countDown = useCountDown(isClick);\n  const onClick = () => setIsClick(true);\n  const initGrid = Array.from({\n    length: 20\n  }, () => new Array(10).fill(0));\n  const [grid, setGrid] = useState(initGrid);\n\n  //아래의 level, line, score는 redux를 사용하는 편이 좋아보임\n  const [level, setLevel] = useState(1);\n  const [line, setLine] = useState(0);\n  const [score, setScore] = useState(0);\n  const {\n    shape,\n    previewShape,\n    color,\n    previewColor,\n    pop\n  } = useShapeAndColor();\n  console.log(shape);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"board-title-tetris\",\n      children: \"TETRIS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isClick && countDown > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"count-down\",\n      children: countDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [grid.map((row, rowIndex) => row.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          color: grid[rowIndex][colIndex] === 1 ? color : 'black'\n        }, `${rowIndex}, ${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 28\n        }, this);\n      })), !isClick && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        className: \"start-button\",\n        children: \"START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        preivewShape: previewShape,\n        preivewColor: previewColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameStats, {\n      level: level,\n      line: line,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"11Q1LYRPCvxN/Lntk+FCy/AGEH4=\", false, function () {\n  return [useSelector, useCountDown, useShapeAndColor];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","Cell","Preview","GameStats","useCountDown","useSelector","useShapeAndColor","jsxDEV","_jsxDEV","Board","_s","isStart","store","value","isClick","setIsClick","countDown","onClick","initGrid","Array","from","length","fill","grid","setGrid","level","setLevel","line","setLine","score","setScore","shape","previewShape","color","previewColor","pop","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIndex","col","colIndex","preivewShape","preivewColor","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Board.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\nimport Preview from \"./Preview\";\nimport GameStats from \"./GameStats\";\nimport { useCountDown } from \"../hooks/useCountDown\";\nimport { useSelector } from \"react-redux\";\nimport { useShapeAndColor } from \"../hooks/useShapeAndColor\";\n\n\n\n\nconst Board = () => {\n    const isStart = useSelector((store) => store.isStart.value);\n    const [isClick, setIsClick] = useState(false);\n    const countDown = useCountDown(isClick);\n    const onClick = () => setIsClick(true);\n    const initGrid = Array.from({ length: 20 }, () => new Array(10).fill(0));\n    const [grid, setGrid] = useState(initGrid);\n\n    //아래의 level, line, score는 redux를 사용하는 편이 좋아보임\n    const [level, setLevel] = useState(1);\n    const [line, setLine] = useState(0);\n    const [score, setScore] = useState(0);\n    \n    const {shape, previewShape, color, previewColor, pop} = useShapeAndColor();\n    console.log(shape);\n    \n    return(\n        <div className=\"board\">\n\n            <h1 className=\"board-title-tetris\">TETRIS</h1>\n            {isClick && countDown > 0 && <span className=\"count-down\">{countDown}</span>}\n            <div className=\"grid\">\n                {grid.map((row, rowIndex) => row.map((col, colIndex) => {\n                    return <Cell \n                        key={`${rowIndex}, ${colIndex}`}\n                        color={grid[rowIndex][colIndex] === 1 ? color : 'black'}\n                    />\n                }))}\n                {!isClick && <button onClick={onClick} className=\"start-button\">START</button>}\n                <Preview preivewShape={previewShape}\n                preivewColor={previewColor} />\n            </div>\n            \n            \n            <GameStats \n                level={level}\n                line={line}\n                score={score}\n            />\n\n        </div>\n    );\n}\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}