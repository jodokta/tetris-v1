{"ast":null,"code":"export const useGetBlock = (block, grid, setGrid) => {\n  const position = {\n    row: 0,\n    col: 10 / 2\n  };\n  const newGrid = [...grid];\n  for (let row = 0; row < block.length; row++) {\n    for (let col = 0; col < block[row].length; col++) {\n      if (block[row][col] === 1) {\n        const x = position.row + row;\n        const y = position.col + col;\n        newGrid[x][y] = 1;\n      }\n    }\n  }\n  setGrid(newGrid);\n};","map":{"version":3,"names":["useGetBlock","block","grid","setGrid","position","row","col","newGrid","length","x","y"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/useGetBlock.js"],"sourcesContent":["export const useGetBlock = (block, grid, setGrid) => {\n    const position = {\n        row: 0,\n        col: (10 / 2)\n    }\n    const newGrid = [...grid];\n    for(let row=0; row<block.length; row++) {\n        for(let col=0; col<block[row].length; col++) {\n            if(block[row][col] === 1) {\n                const x = position.row + row;\n                const y = position.col + col;\n                newGrid[x][y] = 1;\n            }\n        }\n    }\n    setGrid(newGrid);\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,OAAO,KAAK;EACjD,MAAMC,QAAQ,GAAG;IACbC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAG,EAAE,GAAG;EACf,CAAC;EACD,MAAMC,OAAO,GAAG,CAAC,GAAGL,IAAI,CAAC;EACzB,KAAI,IAAIG,GAAG,GAAC,CAAC,EAAEA,GAAG,GAACJ,KAAK,CAACO,MAAM,EAAEH,GAAG,EAAE,EAAE;IACpC,KAAI,IAAIC,GAAG,GAAC,CAAC,EAAEA,GAAG,GAACL,KAAK,CAACI,GAAG,CAAC,CAACG,MAAM,EAAEF,GAAG,EAAE,EAAE;MACzC,IAAGL,KAAK,CAACI,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,CAAC,EAAE;QACtB,MAAMG,CAAC,GAAGL,QAAQ,CAACC,GAAG,GAAGA,GAAG;QAC5B,MAAMK,CAAC,GAAGN,QAAQ,CAACE,GAAG,GAAGA,GAAG;QAC5BC,OAAO,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,CAAC;MACrB;IACJ;EACJ;EACAP,OAAO,CAACI,OAAO,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}