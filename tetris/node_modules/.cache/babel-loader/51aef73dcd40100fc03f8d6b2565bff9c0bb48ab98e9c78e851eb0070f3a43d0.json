{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { checkCollision, createStage } from \"../../gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n  const [ghostPositions, setGhostPositions] = useState([]);\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage => newStage.reduce((ack, row) => {\n      if (row.findIndex(cell => cell[0] === 0) === -1) {\n        setRowsCleared(prev => prev + 1);\n        ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n        return ack;\n      }\n      ack.push(row);\n      return ack;\n    }, []);\n    const calculateGhostPos = stage => {\n      const ghostPos = [];\n      const clonedPlayer = JSON.parse(JSON.stringify(player));\n      for (let i = 0; i < 20; i++) {\n        if (checkCollision(clonedPlayer, stage, {\n          x: 0,\n          y: 1\n        })) {\n          break;\n        } else {\n          console.log('increased...');\n          clonedPlayer.pos.y += 1;\n        }\n      }\n      const calculatedPos = {\n        ...clonedPlayer.pos\n      };\n      clonedPlayer.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            ghostPos.push({\n              x: x + calculatedPos.x,\n              y: y + calculatedPos.y\n            });\n          }\n        });\n      });\n      return ghostPos;\n    };\n    // Ghost Position \n    setGhostPositions(calculateGhostPos(stage));\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collide ? 'merged' : 'clear'}`];\n          }\n        });\n      });\n\n      //충돌 감지시 새 블럭 생성\n      if (player.collide) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Update Block Position as Stage State\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n  return [stage, setStage, rowsCleared, ghostPositions];\n};\n_s(useStage, \"/EMNlWArQ57cHkYmjoVx+ieVUfg=\");","map":{"version":3,"names":["useState","useEffect","checkCollision","createStage","useStage","player","resetPlayer","_s","stage","setStage","rowsCleared","setRowsCleared","ghostPositions","setGhostPositions","sweepRows","newStage","reduce","ack","row","findIndex","cell","prev","unshift","Array","length","fill","push","calculateGhostPos","ghostPos","clonedPlayer","JSON","parse","stringify","i","x","y","console","log","pos","calculatedPos","tetromino","forEach","value","updateStage","prevStage","map","collide"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/tetris/useStage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { checkCollision, createStage } from \"../../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);    \n    const [ghostPositions, setGhostPositions] = useState([]);\n\n    \n\n\n    useEffect( () => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage => \n            newStage.reduce((ack, row) => {\n                if(row.findIndex(cell => cell[0] === 0) ===-1) {\n                    setRowsCleared(prev => prev + 1);\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return ack;\n                }\n                ack.push(row);\n                return ack;\n            }, []);\n\n        const calculateGhostPos = (stage) => {\n            const ghostPos = [];\n            const clonedPlayer = JSON.parse(JSON.stringify(player));\n            \n            for(let i=0; i<20; i++) {\n                if(checkCollision(clonedPlayer, stage, {x: 0, y: 1})) {\n                    break;\n                } else {\n                    console.log('increased...')\n                    clonedPlayer.pos.y += 1;\n                }\n            }\n            \n            const calculatedPos = {...clonedPlayer.pos};\n\n            clonedPlayer.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if(value !== 0) {\n                        ghostPos.push({x: x + calculatedPos.x, y: y + calculatedPos.y});\n                    }   \n                })\n            })            \n            return ghostPos;\n        }\n        // Ghost Position \n        setGhostPositions(calculateGhostPos(stage));\n\n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row => row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)));\n            \n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if(value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collide ? 'merged' : 'clear'}`];\n                    }\n                })\n            });\n            \n            //충돌 감지시 새 블럭 생성\n            if(player.collide) {  \n                resetPlayer() \n                return sweepRows(newStage);\n            }\n            return newStage;\n        }\n        \n        // Update Block Position as Stage State\n        setStage(prev => updateStage(prev));\n\n    }, [player, resetPlayer]);\n\n    return [stage, setStage, rowsCleared, ghostPositions];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}