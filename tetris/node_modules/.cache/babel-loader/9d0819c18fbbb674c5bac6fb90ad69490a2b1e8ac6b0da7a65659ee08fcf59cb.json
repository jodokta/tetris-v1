{"ast":null,"code":"export const selectColor = shape => {\n  const shapeString = JSON.stringify(shape);\n  let color;\n  console.log('...');\n  switch (shapeString) {\n    case JSON.stringify([[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]):\n      color = 'cyan';\n      break;\n    case JSON.stringify([[1, 0, 0], [1, 1, 1], [0, 0, 0]]):\n      color = 'blue';\n      break;\n    case JSON.stringify([[0, 0, 1], [1, 1, 1], [0, 0, 0]]):\n      color = 'orange';\n      break;\n    case JSON.stringify([[1, 1], [1, 1]]):\n      color = 'yellow';\n      break;\n    case JSON.stringify([[0, 1, 1], [1, 1, 0], [0, 0, 0]]):\n      color = 'chartreuse';\n      break;\n    case JSON.stringify([[0, 1, 0], [1, 1, 1], [0, 0, 0]]):\n      color = 'purple';\n      break;\n    case JSON.stringify([[1, 1, 0], [0, 1, 1], [0, 0, 0]]):\n      color = 'red';\n      break;\n    default:\n      color = 'black';\n  }\n  return color;\n};","map":{"version":3,"names":["selectColor","shape","shapeString","JSON","stringify","color","console","log"],"sources":["/Users/Pajamas/Project/tetris/src/utill.js/selectColor.js"],"sourcesContent":["export const selectColor = (shape) => {\n    const shapeString = JSON.stringify(shape);\n    let color;\n    console.log('...')\n    switch(shapeString) {\n        case JSON.stringify([\n            [0, 0, 0, 0],\n            [1, 1, 1, 1],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0]\n        ]) : color = 'cyan';\n        break;\n\n        case JSON.stringify([\n            [1, 0, 0],\n            [1, 1, 1],\n            [0, 0, 0]\n        ]) : color = 'blue';\n        break;\n\n        case JSON.stringify([\n            [0, 0, 1],\n            [1, 1, 1],\n            [0, 0, 0]\n        ]) : color = 'orange';\n        break;\n\n        case JSON.stringify([\n            [1, 1],\n            [1, 1]\n        ]) : color = 'yellow';\n        break;\n\n        case JSON.stringify([\n            [0, 1, 1],\n            [1, 1, 0],\n            [0, 0, 0]\n        ]) : color = 'chartreuse';\n        break;\n\n        case JSON.stringify([\n            [0, 1, 0],\n            [1, 1, 1],\n            [0, 0, 0]\n        ]) : color = 'purple';\n        break;\n\n        case JSON.stringify([\n            [1, 1, 0],\n            [0, 1, 1],\n            [0, 0, 0]\n        ]) : color = 'red';\n        break;\n\n        default: color = 'black';\n    }\n    return color;\n}"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAK,IAAK;EAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;EACzC,IAAII,KAAK;EACTC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,QAAOL,WAAW;IACd,KAAKC,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACf,CAAC;MAAGC,KAAK,GAAG,MAAM;MACnB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MAAGC,KAAK,GAAG,MAAM;MACnB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MAAGC,KAAK,GAAG,QAAQ;MACrB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CACT,CAAC;MAAGC,KAAK,GAAG,QAAQ;MACrB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MAAGC,KAAK,GAAG,YAAY;MACzB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MAAGC,KAAK,GAAG,QAAQ;MACrB;IAEA,KAAKF,IAAI,CAACC,SAAS,CAAC,CAChB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ,CAAC;MAAGC,KAAK,GAAG,KAAK;MAClB;IAEA;MAASA,KAAK,GAAG,OAAO;EAC5B;EACA,OAAOA,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}