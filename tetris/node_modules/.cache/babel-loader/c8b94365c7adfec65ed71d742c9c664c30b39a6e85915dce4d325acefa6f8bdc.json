{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { createStage } from \"../../gameHelpers\";\nexport const useStage = (player, resetPlayer) => {\n  _s();\n  const [stage, setStage] = useState(createStage());\n  console.log(player.tetromino);\n  useEffect(() => {\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row => row.map(cell => cell[1] === 'clear' ? [0, 'clear'] : cell));\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collide ? 'merged' : 'clear'}`];\n          }\n        });\n      });\n      return newStage;\n    };\n    setStage(prev => updateStage(prev));\n  }, [player.collide, player.pos.x, player.pos.y, player.tetromino]);\n  return [stage, setStage];\n};\n_s(useStage, \"5P+otx0I7S1W+XNBDZZ95jKxV+k=\");","map":{"version":3,"names":["useState","useEffect","createStage","useStage","player","resetPlayer","_s","stage","setStage","console","log","tetromino","updateStage","prevStage","newStage","map","row","cell","forEach","y","value","x","pos","collide","prev"],"sources":["/Users/Pajamas/Project/tetris/src/hooks/tetris/useStage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { createStage } from \"../../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    console.log(player.tetromino);\n    useEffect( () => {\n        const updateStage = prevStage => {\n            const newStage = prevStage.map(row => row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)));\n\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if(value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collide ? 'merged' : 'clear'}`]\n                    }\n                })\n            })\n\n            return newStage;\n        }\n\n        setStage(prev => updateStage(prev));\n\n    }, [player.collide, player.pos.x, player.pos.y, player.tetromino]);\n\n    return [stage, setStage];\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,mBAAmB;AAE/C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC;EACjDO,OAAO,CAACC,GAAG,CAACN,MAAM,CAACO,SAAS,CAAC;EAC7BV,SAAS,CAAE,MAAM;IACb,MAAMW,WAAW,GAAGC,SAAS,IAAI;MAC7B,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACD,GAAG,CAACE,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,GAAGA,IAAK,CAAC,CAAC;MAEnGb,MAAM,CAACO,SAAS,CAACO,OAAO,CAAC,CAACF,GAAG,EAAEG,CAAC,KAAK;QACjCH,GAAG,CAACE,OAAO,CAAC,CAACE,KAAK,EAAEC,CAAC,KAAK;UACtB,IAAGD,KAAK,KAAK,CAAC,EAAE;YACZN,QAAQ,CAACK,CAAC,GAAGf,MAAM,CAACkB,GAAG,CAACH,CAAC,CAAC,CAACE,CAAC,GAAGjB,MAAM,CAACkB,GAAG,CAACD,CAAC,CAAC,GAAG,CAACD,KAAK,EAAG,GAAEhB,MAAM,CAACmB,OAAO,GAAG,QAAQ,GAAG,OAAQ,EAAC,CAAC;UACpG;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;MAEF,OAAOT,QAAQ;IACnB,CAAC;IAEDN,QAAQ,CAACgB,IAAI,IAAIZ,WAAW,CAACY,IAAI,CAAC,CAAC;EAEvC,CAAC,EAAE,CAACpB,MAAM,CAACmB,OAAO,EAAEnB,MAAM,CAACkB,GAAG,CAACD,CAAC,EAAEjB,MAAM,CAACkB,GAAG,CAACH,CAAC,EAAEf,MAAM,CAACO,SAAS,CAAC,CAAC;EAElE,OAAO,CAACJ,KAAK,EAAEC,QAAQ,CAAC;AAC5B,CAAC;AAAAF,EAAA,CAvBYH,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}