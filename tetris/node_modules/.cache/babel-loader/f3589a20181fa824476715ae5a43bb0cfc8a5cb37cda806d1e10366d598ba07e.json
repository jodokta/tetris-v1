{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\nimport { useSelector } from \"react-redux\";\nimport Preview from \"./Preview\";\nimport GameStats from \"./GameStats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const initGrid = Array.from({\n    length: 20\n  }, () => new Array(10).fill(0));\n  const [grid, setGrid] = useState(initGrid);\n  const isStart = useSelector(store => store.isStart.value);\n  useEffect(() => {\n    //카운트 다운 끝나면 true\n    if (isStart) {}\n  }, [isStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"board-title-tetris\",\n      children: \"TETRIS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((row, rowIndex) => row.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          color: grid[rowIndex][colIndex] === 1 ? 'black' : 'rgb(116, 130, 95)'\n        }, `${rowIndex}, ${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 28\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Preview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GameStats, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"nB3pPqlDcSPJLFFsfBTdSH5UKf8=\", false, function () {\n  return [useSelector];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useState","Cell","useSelector","Preview","GameStats","jsxDEV","_jsxDEV","Board","_s","initGrid","Array","from","length","fill","grid","setGrid","isStart","store","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIndex","col","colIndex","color","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Board.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\nimport { useSelector } from \"react-redux\";\nimport Preview from \"./Preview\";\nimport GameStats from \"./GameStats\";\n\n\nconst Board = () => {\n    const initGrid = Array.from({ length: 20 }, () => new Array(10).fill(0));\n    const [grid, setGrid] = useState(initGrid);\n    const isStart = useSelector((store) => store.isStart.value);\n    \n    useEffect( () => {\n        //카운트 다운 끝나면 true\n        if(isStart) {\n            \n        }\n    }, [isStart])\n\n\n\n\n    \n    return(\n        <div className=\"Board\">\n            <h1 className=\"board-title-tetris\">TETRIS</h1>\n            <div className=\"grid\">\n                {grid.map((row, rowIndex) => row.map((col, colIndex) => {\n                    return <Cell \n                        key={`${rowIndex}, ${colIndex}`}\n                        color={grid[rowIndex][colIndex] === 1 ? 'black' : 'rgb(116, 130, 95)'}\n                    />\n                }))}\n            </div>\n            <Preview />\n            <GameStats />\n        </div>\n    );\n}\nexport default Board;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,MAAM,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACS,QAAQ,CAAC;EAC1C,MAAMO,OAAO,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,OAAO,CAACE,KAAK,CAAC;EAE3DnB,SAAS,CAAE,MAAM;IACb;IACA,IAAGiB,OAAO,EAAE,CAEZ;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAMb,oBACIV,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBd,OAAA;MAAIa,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9ClB,OAAA;MAAKa,SAAS,EAAC,MAAM;MAAAC,QAAA,EAChBN,IAAI,CAACW,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAKD,GAAG,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,KAAK;QACpD,oBAAOvB,OAAA,CAACL,IAAI;UAER6B,KAAK,EAAEhB,IAAI,CAACa,QAAQ,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG;QAAoB,GADhE,GAAEF,QAAS,KAAIE,QAAS,EAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElC,CAAC;MACN,CAAC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNlB,OAAA,CAACH,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXlB,OAAA,CAACF,SAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAAhB,EAAA,CA/BKD,KAAK;EAAA,QAGSL,WAAW;AAAA;AAAA6B,EAAA,GAHzBxB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}