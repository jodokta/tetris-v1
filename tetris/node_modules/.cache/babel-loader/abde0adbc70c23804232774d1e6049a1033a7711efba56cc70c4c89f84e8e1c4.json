{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Board.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  _s();\n  let {\n    isStart\n  } = _ref;\n  const initGrid = Array.from({\n    length: 20\n  }, () => new Array(10).fill(0));\n  const [grid, setGrid] = useState(initGrid);\n  useEffect(() => {\n    console.log(isStart);\n  }, [isStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: grid.map((row, rowIndex) => row.map((col, colIndex) => {\n      return /*#__PURE__*/_jsxDEV(Cell, {\n        color: grid[rowIndex][colIndex] === 1 ? 'black' : 'rgb(116, 130, 95)'\n      }, `${rowIndex}, ${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"/Ey8qWfxNj7Z00trVQ0bpAZn0cI=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","useState","Cell","jsxDEV","_jsxDEV","Board","_ref","_s","isStart","initGrid","Array","from","length","fill","grid","setGrid","console","log","className","children","map","row","rowIndex","col","colIndex","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Board.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Cell from \"./Cell\";\nimport \"../css/Board.css\";\n\n\nconst Board = ({isStart}) => {\n    const initGrid = Array.from({ length: 20 }, () => new Array(10).fill(0));\n    const [grid, setGrid] = useState(initGrid);\n    \n    useEffect( () => {\n        console.log(isStart);\n    }, [isStart])\n\n\n\n\n\n\n\n\n\n\n\n\n    return(\n        <div className=\"Board\">\n            {grid.map((row, rowIndex) => row.map((col, colIndex) => {\n                return <Cell \n                    key={`${rowIndex}, ${colIndex}`}\n                    color={grid[rowIndex][colIndex] === 1 ? 'black' : 'rgb(116, 130, 95)'}\n                />\n            }))}\n        </div>\n    );\n}\nexport default Board;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,KAAK,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAACC;EAAO,CAAC,GAAAF,IAAA;EACpB,MAAMG,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,MAAM,IAAIF,KAAK,CAAC,EAAE,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EACxE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACQ,QAAQ,CAAC;EAE1CT,SAAS,CAAE,MAAM;IACbgB,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EACxB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAab,oBACIJ,OAAA;IAAKc,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBL,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAKD,GAAG,CAACD,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,KAAK;MACpD,oBAAOpB,OAAA,CAACF,IAAI;QAERuB,KAAK,EAAEX,IAAI,CAACQ,QAAQ,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG;MAAoB,GADhE,GAAEF,QAAS,KAAIE,QAAS,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElC,CAAC;IACN,CAAC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAAAtB,EAAA,CA7BKF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}