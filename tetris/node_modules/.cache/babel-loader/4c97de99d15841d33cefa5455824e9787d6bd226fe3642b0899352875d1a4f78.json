{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/Project/tetris/src/components/Tetris/Cell.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { TETROMINOS } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = _ref => {\n  let {\n    type,\n    isGhost\n  } = _ref;\n  return isGhost ? /*#__PURE__*/_jsxDEV(StyledCell, {\n    ghost: 'true',\n    type: type,\n    color: TETROMINOS[type].color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(StyledCell, {\n    type: type,\n    color: TETROMINOS[type].color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 97\n  }, this);\n};\n\n// export default Cell;\n_c = Cell;\nexport default _c2 = /*#__PURE__*/React.memo(Cell);\nconst StyledCell = styled.div`\n    display: inline;\n    width: auto;\n\n    border: 2px solid;\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n\n    ${props => props.ghost && css`\n      background-color: rgba(${props => props.color}, 0.3);\n      border-width: 1px;\n      border-color: rgba(${props => props.color}, 0.5);\n      box-shadow: 0px 0px 4px rgba(${props => props.color}, 0.7);\n    `}\n`;\n_c3 = StyledCell;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"StyledCell\");","map":{"version":3,"names":["React","styled","css","TETROMINOS","jsxDEV","_jsxDEV","Cell","_ref","type","isGhost","StyledCell","ghost","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","memo","div","props","_c3","$RefreshReg$"],"sources":["/Users/Pajamas/Project/tetris/src/components/Tetris/Cell.js"],"sourcesContent":["import React from 'react';\n\nimport styled, { css } from 'styled-components';\nimport { TETROMINOS } from '../../constants';\n\n\nconst Cell = ({ type, isGhost }) => {\n    return isGhost ? <StyledCell ghost={'true'} type={type} color={TETROMINOS[type].color} /> : <StyledCell type={type} color={TETROMINOS[type].color} />;\n}\n\n// export default Cell;\nexport default React.memo(Cell);\n\nconst StyledCell = styled.div`\n    display: inline;\n    width: auto;\n\n    border: 2px solid;\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n\n    ${props =>\n    props.ghost &&\n    css`\n      background-color: rgba(${props => props.color}, 0.3);\n      border-width: 1px;\n      border-color: rgba(${props => props.color}, 0.5);\n      box-shadow: 0px 0px 4px rgba(${props => props.color}, 0.7);\n    `}\n`"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,IAAI,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3B,OAAOE,OAAO,gBAAGJ,OAAA,CAACK,UAAU;IAACC,KAAK,EAAE,MAAO;IAACH,IAAI,EAAEA,IAAK;IAACI,KAAK,EAAET,UAAU,CAACK,IAAI,CAAC,CAACI;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGX,OAAA,CAACK,UAAU;IAACF,IAAI,EAAEA,IAAK;IAACI,KAAK,EAAET,UAAU,CAACK,IAAI,CAAC,CAACI;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzJ,CAAC;;AAED;AAAAC,EAAA,GAJMX,IAAI;AAKV,eAAAY,GAAA,gBAAelB,KAAK,CAACmB,IAAI,CAACb,IAAI,CAAC;AAE/B,MAAMI,UAAU,GAAGT,MAAM,CAACmB,GAAI;AAC9B;AACA;AACA;AACA;AACA,gCAAgCC,KAAK,IAAIA,KAAK,CAACT,KAAM;AACrD,+BAA+BS,KAAK,IAAIA,KAAK,CAACT,KAAM;AACpD,6BAA6BS,KAAK,IAAIA,KAAK,CAACT,KAAM;AAClD,8BAA8BS,KAAK,IAAIA,KAAK,CAACT,KAAM;AACnD;AACA,MAAMS,KAAK,IACPA,KAAK,CAACV,KAAK,IACXT,GAAI;AACR,+BAA+BmB,KAAK,IAAIA,KAAK,CAACT,KAAM;AACpD;AACA,2BAA2BS,KAAK,IAAIA,KAAK,CAACT,KAAM;AAChD,qCAAqCS,KAAK,IAAIA,KAAK,CAACT,KAAM;AAC1D,KAAM;AACN,CAAC;AAAAU,GAAA,GAlBKZ,UAAU;AAAA,IAAAO,EAAA,EAAAC,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}